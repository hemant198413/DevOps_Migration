parameters:
  - name: validationManagementGroup
    type: string
  - name: validationSubscription
    type: string
  - name: validationResourceGroup
    type: string
  - name: validateRegion
    type: string
steps:
- task: AzureCLI@2
  displayName: "Validate templates"
  inputs:
    azureSubscription: "azure-hips-cdp-dev"
    scriptType: "bash"
    failOnStandardError: true
    scriptLocation: "inlineScript"
    inlineScript: |
      SOURCE_FOLDER="./src/*/*/"
      failureCount=0
      totalCount=0
      OverallResult=true
      for d in `find $SOURCE_FOLDER -maxdepth 0 -mindepth 0 -type d`
      do
        printf d
        if [ -e "$d/mg-template.json" ]
        then
          if [ -e "$d/mg-template-params.json" ]
          then
              printf "Directory: $d\n"
              let "totalCount=totalCount+1"
              validateResult=`az deployment mg validate --name "preview-ado-cd-$BUILD_BUILDNUMBER" --management-group-id "${{ parameters.validationManagementGroup }}" --location "${{ parameters.validateRegion }}" --template-file $d/mg-template.json --parameters $d/mg-template-params.json --output table | awk '{print $1}'`
              echo $validateResult
              result=`echo $validateResult | grep Succeeded|wc -l`
              if [ $result -ne 1 ]
              then
                echo 'Validation-->**Failed**'
                OverallResult=false
                let "failureCount=failureCount+1"
              fi
          else
            printf 'no template-params file found.\n'
          fi
        else
          printf 'no template file found.\n'
        fi
        if [ -e "$d/sub-template.json" ]
        then
          if [ -e "$d/sub-template-params.json" ]
          then
            printf "Directory: $d\n"
            let "totalCount=totalCount+1"
            validateResult=`az deployment sub validate --name "preview-ado-cd-$BUILD_BUILDNUMBER" --location "${{ parameters.validateRegion }}" --template-file $d/sub-template.json --parameters $d/sub-template-params.json --subscription "${{ parameters.validationSubscription }}" --output table | awk '{print $1}'`
            echo $validateResult
            result=`echo $validateResult | grep Succeeded|wc -l`
            if [ $result -ne 1 ]
            then
                echo 'Validation-->**Failed**'
                OverallResult=false
                let "failureCount=failureCount+1"
            fi
          else
            printf 'no template-params file found.\n'
          fi
        else
          printf 'no template file found.\n'
        fi
        if [ -e "$d/group-template.json" ]
        then
          if [ -e "$d/group-template-params.json" ]
          then
            printf "Directory: $d\n"
              let "totalCount=totalCount+1"
              validateResult=`az deployment group validate --name "ci-$BUILD_BUILDNUMBER" --resource-group ${{ parameters.validationResourceGroup }} --mode Incremental --template-file $d/group-template.json --parameters $d/group-template-params.json --subscription "${{ parameters.validationSubscription }}" --output table | awk '{print $1}'`
              echo $validateResult
              result=`echo $validateResult | grep Succeeded|wc -l`
              if [ $result -ne 1 ]
              then
                  echo 'Validation-->**Failed**'
                  OverallResult=false
                  let "failureCount=failureCount+1"
              fi
          else
            printf 'no template-params file found.\n'
          fi
        else
          printf 'no template file found.\n'
        fi
      done

      if [ "$OverallResult" = false ]
      then
          echo 'Out of -' $totalCount ' template validation failed for -' $failureCount
          exit 1
      fi
      echo 'Run validation sucessfully on -' $totalCount  ' templates.'
